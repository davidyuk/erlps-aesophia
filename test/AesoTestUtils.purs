module Aeso.Test.Utils(erlps__read_contract__1,
                       erlps__contract_path__0) where
{-
This file has been autogenerated
DO NOT EDIT - Your changes WILL be overwritten
Use this code at your own risk - the authors are just a mischievous raccoon and a haskell devote
Erlscripten v0.1.0
-}

import Prelude
import Data.Array as DA
import Data.List as DL
import Data.Maybe as DM
import Data.Map as Map
import Data.Tuple as Tup
import Data.BigInt as DBI
import Erlang.Builtins as BIF
import Erlang.Binary as BIN
import Erlang.Helpers as H
import Erlang.Exception as EXC
import Erlang.Type (ErlangFun, ErlangTerm(..), weakCmp, weakEq,
                    weakNEq, weakLt, weakLeq, weakGeq, weakGt)
import Effect (Effect)
import Effect.Unsafe (unsafePerformEffect)
import Effect.Exception (throw)
import Partial.Unsafe (unsafePartial)


erlps__contract_path__0 :: ErlangFun
erlps__contract_path__0 [] =
  let   
    arg_0 =
      H.make_string "aesophia/test"
  in let arg_3 = (H.make_string "contracts")
  in
    (BIF.do_remote_fun_call "Filename" "erlps__join__2"
       [arg_0, arg_3])
erlps__contract_path__0 args =
  (EXC.badarity
     (ErlangFun 0 (\ _ -> (ErlangAtom "purs_tco_sucks"))) args)

erlps__read_contract__1 :: ErlangFun
erlps__read_contract__1 [name_0] =
  let    arg_2 = (erlps__contract_path__0 [])
  in let head_7 = (H.make_string ".aes")
  in let
    arg_3 =
      (BIF.do_remote_fun_call "Lists" "erlps__concat__1"
         [(ErlangCons name_0 (ErlangCons head_7 ErlangEmptyList))])
  in let
    arg_1 =
      (BIF.do_remote_fun_call "Filename" "erlps__join__2"
         [arg_2, arg_3])
  in let
    match_expr_10 =
      (BIF.do_remote_fun_call "File" "erlps__read_file__1" [arg_1])
  in
    case match_expr_10 of
      (ErlangTuple [(ErlangAtom "ok"), bin_9]) ->
        (BIF.erlang__binary_to_list__1 [bin_9])
      _ -> (EXC.badmatch match_expr_10)
erlps__read_contract__1 [arg_12] = (EXC.function_clause unit)
erlps__read_contract__1 args =
  (EXC.badarity
     (ErlangFun 1 (\ _ -> (ErlangAtom "purs_tco_sucks"))) args)